-- LocalScript inside StarterPlayer -> StarterPlayerScripts

local player = game.Players.LocalPlayer
local playerGui = player.PlayerGui
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- Create RemoteEvent in ReplicatedStorage if it doesn't exist (for communication between client and server)
local moveEvent = ReplicatedStorage:FindFirstChild("MoveEvent")
if not moveEvent then
    moveEvent = Instance.new("RemoteEvent")
    moveEvent.Name = "MoveEvent"
    moveEvent.Parent = ReplicatedStorage
end

-- UI Setup (Create a button on the top-right of the screen)
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = playerGui
screenGui.Name = "PushBackUI"

local button = Instance.new("TextButton")
button.Parent = screenGui
button.Size = UDim2.new(0, 150, 0, 50)
button.Position = UDim2.new(1, -160, 0, 20) -- Top-right position
button.Text = "Activate Pushback"
button.TextSize = 20
button.BackgroundColor3 = Color3.fromRGB(255, 0, 0)

-- Boolean to track if the effect is activated or not
local pushbackActive = false

-- Function to activate/deactivate pushback
local function togglePushback()
    pushbackActive = not pushbackActive  -- Toggle the state

    if pushbackActive then
        button.Text = "Deactivate Pushback"
    else
        button.Text = "Activate Pushback"
    end
end

-- Detect when the button is clicked
button.MouseButton1Click:Connect(togglePushback)

-- Function to handle moving the player away from others (server-side logic)
local function movePlayerAway(character, targetPosition)
    -- Find the player's humanoid and move them away from the target position
    if character and character:FindFirstChild("Humanoid") then
        local humanoid = character.Humanoid
        humanoid:MoveTo(targetPosition)  -- Move the character to the new position
    end
end

-- Function to handle the pushback effect
local function handlePushback()
    while pushbackActive do
        -- Iterate over all players in the game
        for _, otherPlayer in ipairs(Players:GetPlayers()) do
            if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local otherCharacter = otherPlayer.Character
                local otherHumanoidRootPart = otherCharacter.HumanoidRootPart

                -- Calculate the distance between the player and the other character
                local distance = (otherHumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude

                -- If the player is too close, move the character away
                if distance < 10 then  -- You can adjust this distance threshold
                    local direction = (player.Character.HumanoidRootPart.Position - otherHumanoidRootPart.Position).unit
                    local pushbackPosition = player.Character.HumanoidRootPart.Position + direction * 5  -- Move 5 studs away
                    moveEvent:FireServer(player.Character, pushbackPosition)
                end
            end
        end
        wait(0.1)  -- Check every 0.1 seconds
    end
end

-- Start the pushback logic when activated
RunService.Heartbeat:Connect(function()
    if pushbackActive then
        handlePushback()  -- Start handling pushback when active
    end
end)

-- Server-side code for handling the movement (should be placed in a Script inside ServerScriptService)
local function onMoveEventFired(player, targetPosition)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local humanoidRootPart = player.Character.HumanoidRootPart
        humanoidRootPart.CFrame = CFrame.new(targetPosition)  -- Set the position of the player
    end
end

moveEvent.OnServerEvent:Connect(onMoveEventFired)
